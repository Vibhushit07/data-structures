package queue;
import java.util.*;
public class operations
{
    static Queue <Integer>q = new ArrayDeque <Integer>();
    static void reverse()
    {
        Stack <Integer> s=new Stack<Integer>();
        while(!q.isEmpty())
        {
            s.add(q.poll());
        }
        while(!s.isEmpty())
        {
            q.add(s.pop());
        }
    }
    static void sort()
    {
        Queue <Integer>q1=new ArrayDeque<Integer>();
        int temp;
       while(!q.isEmpty())
       {
           temp=q.poll();
           while(!q1.isEmpty() && q1.peek()>temp)
           {
               q.add(q1.poll());
           }
           q1.add(temp);
       }
    }
    static void show()
    {
        while(!q.isEmpty())
        {
            System.out.println(q.poll());
        }
    }
    public static void main(String args[])
    {
        q.add(10);
        q.add(20);
        q.add(30);
        q.add(40);
        q.add(50);
        //reverse();
        sort();
        show();
    }
}
